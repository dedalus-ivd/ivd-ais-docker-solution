# https://confluence.dedalus.com/pages/viewpage.action?spaceKey=DRA&title=Checklist
# http://ci-git.noemalife.loc/enterprise-architect/ApacheRemediation/src/master/configure-haproxy.md

global
  log stdout format raw local0 info
  maxconn 4096
  # generated 2025-05-09, Mozilla Guideline v5.7, HAProxy 2.8.15, OpenSSL 3.4.0, modern config
  # https://ssl-config.mozilla.org/#server=haproxy&version=2.8.15&config=modern&openssl=3.4.0&guideline=5.7
  # modern configuration
  ssl-default-bind-curves X25519:prime256v1:secp384r1
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers ssl-min-ver TLSv1.2 no-tls-tickets

  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
  mode http
  timeout client 10s
  timeout connect 5s
  timeout server 60s
  timeout http-request 20s
  log global
  default-server init-addr last,libc,none

# This section is to make the server check works even if the service starts
# after the haproxy: the default behaviour is to disable the server if dns name resolution fails
resolvers docker_resolver
  nameserver dns 127.0.0.11:53

##########################
#         STATS          #
##########################
listen stats
    bind 0.0.0.0:"$HAPROXY_STATS_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
    mode       http
    maxconn    10
    stats      enable
    stats      refresh 10s
    stats      show-legends
    stats      show-node
    stats      hide-version
    stats      uri /stats
    stats      realm Haproxy\ Statistics
    stats      auth "$HAPROXY_STATS_USER":"$HAPROXY_STATS_PSW"
    option     dontlog-normal
    timeout    client 100s
    timeout    server 100s
    timeout    connect 100s
    timeout    queue 100s

##########################
#  HAPROXY HEALTH CHECK  #
##########################
listen http_health_check 
	bind 0.0.0.0:"$HAPROXY_HEALTH_CHECK_PORT"
	http-request return status 200 content-type "text/plain" lf-string "Hello"

##########################
#       GRAFANA         #
##########################

frontend grafana_frontend
  bind 0.0.0.0:"$GRAFANA_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$GRAFANA_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend grafana_backend

backend grafana_backend
  server s1 "$GRAFANA_SERVICE_NAME":"$GRAFANA_INTERNAL_PORT" check  resolvers docker_resolver inter 5000

##########################
#  SECURE FE             #
##########################

frontend https-fe
  bind 0.0.0.0:443 ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog

  #ACL definitions
  #discovery service
  acl discovery path_beg /xdiscovery-service
  #ivais
  acl ivais_lm path_beg /Quincy 
  acl ivais_lm path_beg /quincy_client_plugins
  acl ivais_lm path_beg /quincy_tracking
  acl ivais_lm path_beg /spice
  acl ivais_lm path_beg /probe
  acl ivais_lm path_beg /people
  acl ivais_lm path_beg /AthenaWebUtils
  #device manager
  acl device_manager path_beg /api-dmserver
  acl device_manager path_beg /dmcompact
  #web reporting - R4C
  acl r4c_apps path_beg /r4c
  acl r4c_gateway path_beg /r4c-gateway
  #corelab
  acl corelab_fe path_beg /corelab
  acl corelab_be path_beg /arm-weblab
  acl corelab_reporting path_beg /ais-arm-srv
  acl corelab_cda path_beg /arm-weblab-cda
  acl corelab_print path_beg /arm-weblab-print

 
  use_backend discovery_backend if discovery
  use_backend IVAIS_LM_backend if ivais_lm
  use_backend device_manager_backend if device_manager

  use_backend r4c_gateway_backend if r4c_gateway
  use_backend r4c_apps_backend if r4c_apps

  use_backend CORELAB_cda if corelab_cda
  use_backend CORELAB_print if corelab_print
  use_backend CORELAB_reporting if corelab_reporting
  use_backend CORELAB_BE_backend if corelab_be
  use_backend CORELAB_FE_backend if corelab_fe

##########################
#  DISCOVERY SERVICE     #
##########################

backend discovery_backend
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$DISCOVERY_SERVICE_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$DS_SERVICE_NAME":"$DS_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 

##########################
#       R4C GATEWAY      #
##########################
backend r4c_gateway_backend
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$R4C_GATEWAY_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$R4C_GATEWAY_SERVICE_NAME":"$R4C_GATEWAY_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 


##########################
#       R4C APPS         #
##########################
backend r4c_apps_backend
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$R4C_APPS_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$R4C_APPS_SERVICE_NAME":"$R4C_APPS_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 


##########################
#    IVAIS LM BACKEND    #
##########################
backend IVAIS_LM_backend
  mode http
  option forwardfor
  http-request add-header X-Forwarded-Port 443
  http-request add-header X-Forwarded-Proto https
  server s1 "$IVAIS_LM_IP":"$IVAIS_LM_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 


##########################
#    IVAIS LM PROCS      #
##########################
frontend IVAIS_LM_PROCS
  bind 0.0.0.0:"$IVAIS_LM_PROCS_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  default_backend IVAIS_LM_PROCS_backend

backend IVAIS_LM_PROCS_backend
  mode http
  option forwardfor
  http-request add-header X-Forwarded-Port 443
  http-request add-header X-Forwarded-Proto https
  server s1 "$IVAIS_LM_PROCS_IP":"$IVAIS_LM_PROCS_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 

##########################
#    CORELAB BE         #
##########################
backend CORELAB_BE_backend
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$CORELAB_BE_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$CORELAB_BE_SERVICE_NAME":"$CORELAB_BE_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 

##########################
#    CORELAB FE         #
##########################
backend CORELAB_FE_backend
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$CORELAB_FE_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$CORELAB_FE_SERVICE_NAME":"$CORELAB_FE_INTERNAL_PORT" check  resolvers docker_resolver inter 5000

##########################
#   CORELAB REPORTING    #
##########################
backend CORELAB_reporting
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$CORELAB_REPORTING_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$CORELAB_REPORTING_SERVICE_NAME":"$CORELAB_REPORTING_INTERNAL_PORT" check  resolvers docker_resolver inter 5000

##########################
#   CORELAB PRINT        #
##########################
backend CORELAB_print
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$CORELAB_PRINT_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$CORELAB_PRINT_SERVICE_NAME":"$CORELAB_PRINT_INTERNAL_PORT" check  resolvers docker_resolver inter 5000

##########################
#     CORELAB CDA        #
##########################
backend CORELAB_cda
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$CORELAB_CDA_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$CORELAB_CDA_SERVICE_NAME":"$CORELAB_CDA_INTERNAL_PORT" check  resolvers docker_resolver inter 5000

##########################
#   DEVICE MANAGER      #
##########################
backend device_manager_backend
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$DEVICE_MANAGER_SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  server s1 "$DEVICE_MANAGER_SERVICE_NAME":"$DEVICE_MANAGER_INTERNAL_PORT" check  resolvers docker_resolver inter 5000

