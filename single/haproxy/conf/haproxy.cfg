# https://confluence.dedalus.com/pages/viewpage.action?spaceKey=DRA&title=Checklist
# http://ci-git.noemalife.loc/enterprise-architect/ApacheRemediation/src/master/configure-haproxy.md

global
  log stdout format raw local0 info
  maxconn 4096
  # generated 2025-05-09, Mozilla Guideline v5.7, HAProxy 2.8.15, OpenSSL 3.4.0, modern config
  # https://ssl-config.mozilla.org/#server=haproxy&version=2.8.15&config=modern&openssl=3.4.0&guideline=5.7
  # modern configuration
  ssl-default-bind-curves X25519:prime256v1:secp384r1
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers ssl-min-ver TLSv1.3 no-tls-tickets

  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options ssl-min-ver TLSv1.3 no-tls-tickets

defaults
  mode http
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log global
  default-server init-addr last,libc,none

# This section is to make the server check works even if the service starts
# after the haproxy: the default behaviour is to disable the server if dns name resolution fails
resolvers docker_resolver
  nameserver dns 127.0.0.11:53

##########################
#         STATS          #
##########################
listen stats
    bind 0.0.0.0:"$HAPROXY_STATS_PORT"
    mode       http
    maxconn    10
    stats      enable
    stats      refresh 10s
    stats      show-legends
    stats      show-node
    stats      hide-version
    stats      uri /stats
    stats      realm Haproxy\ Statistics
    stats      auth "$HAPROXY_STATS_USER":"$HAPROXY_STATS_PSW"
    option     dontlog-normal
    timeout    client 100s
    timeout    server 100s
    timeout    connect 100s
    timeout    queue 100s

##########################
#       GRAFANA         #
##########################

frontend grafana_frontend
  bind 0.0.0.0:"$GRAFANA_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend grafana_backend

backend grafana_backend
  server s1 "$GRAFANA_SERVICE_NAME":"$GRAFANA_INTERNAL_PORT" check  resolvers docker_resolver inter 5000

##########################
#  DISCOVERY SERVICE     #
##########################

frontend discovery_frontend
  bind 0.0.0.0:"$DS_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend discovery_backend

backend discovery_backend
  server s1 "$DS_SERVICE_NAME":"$DS_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 

##########################
#       R4C GATEWAY      #
##########################

frontend r4c_gateway_frontend
  bind 0.0.0.0:"$R4C_GATEWAY_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend r4c_gateway_backend

backend r4c_gateway_backend
  server s1 "$R4C_GATEWAY_SERVICE_NAME":"$R4C_GATEWAY_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 


##########################
#       R4C APPS         #
##########################
frontend r4c_apps_frontend
  bind 0.0.0.0:"$R4C_APPS_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend r4c_apps_backend

backend r4c_apps_backend
  server s1 "$R4C_APPS_SERVICE_NAME":"$R4C_APPS_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 


##########################
#    IVAIS LM BACKEND    #
##########################
frontend IVAIS_LM
  bind 0.0.0.0:"$IVAIS_LM_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend IVAIS_LM_backend

backend IVAIS_LM_backend
  server s1 "$IVAIS_LM_SERVICE_NAME":"$IVAIS_LM_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 


##########################
#    IVAIS LM PROCS      #
##########################
frontend IVAIS_LM_PROCS
  bind 0.0.0.0:"$IVAIS_LM_PROCS_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend IVAIS_LM_PROCS_backend

backend IVAIS_LM_PROCS_backend
  server s1 "$IVAIS_LM_PROCS_SERVICE_NAME":"$IVAIS_LM_PROCS_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 

##########################
#    CORELAB BE         #
##########################
frontend CORELAB_BE
  bind 0.0.0.0:"$CORELAB_BE_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend IVAIS_LM_PROCS_backend

backend CORELAB_BE_backend
  server s1 "$CORELAB_BE_SERVICE_NAME":"$CORELAB_BE_INTERNAL_PORT" check  resolvers docker_resolver inter 5000 

##########################
#    CORELAB FE         #
##########################
frontend CORELAB_FE
  bind 0.0.0.0:"$CORELAB_FE_PORT" ssl crt /usr/local/etc/haproxy/haproxy_cert.pem
  log             global
  option          dontlognull
  option          httplog
  # Add X-Headers necessary for HTTPS; include:[port] if not running on port 443
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-Proto https
  # HSTS CWE-116
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"
  # X-XSS-Protection CWE-1021
  http-response set-header X-XSS-Protection "1; mode=block"
  ### =============== YOU MUST REVIEW THAT 
  #http-response set-header Content-Security-Policy "default-src 'none';script-src 'self';img-src 'self';style-src 'self';"
  # X-Frame-Options CWE-346
  http-response set-header X-Frame-Options sameorigin
  # X-Content-Type-Options CWE-116
  http-response set-header X-Content-Type-Options nosniff
  # Referrer Policy CWE-116
  http-response set-header Referrer-Policy same-origin
  #CWE-200 Exposure of Sensitive Information to an Unauthorized Actor
  http-response del-header X-Powered-By
  http-response set-header X-Robots-Tag noindex
  http-response del-header ^Server:.*
  # CWE-346         
  # TODO: set a strict minum domain 
  # http-response set-header Access-Control-Allow-Origin "<mydomain1>,<mydomain2>,..."
  http-response set-header Access-Control-Allow-Origin "$SOLUTION_BASE_URL"
  # CWE-539,614,1004,16
  # Compatible with haproxy < 2
  http-response replace-header Set-Cookie (^((?!(?i)httponly).)*$) \1;HttpOnly
  http-response replace-header Set-Cookie (^((?!(?i)secure).)*$) \1;Secure
  http-response replace-header Set-Cookie (^((?!(?i)samesite).)*$) \1;SameSite=Strict
  # Rewrite all redirects to use HTTPS
  http-response replace-value Location ^http://(.*)$ https://\1
  default_backend IVAIS_LM_PROCS_backend

backend CORELAB_FE_backend
  server s1 "$CORELAB_FE_SERVICE_NAME":"$CORELAB_FE_INTERNAL_PORT" check  resolvers docker_resolver inter 5000
